# -*- coding: utf-8 -*-
"""final_backend.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZL8pE7pq8c-0X3GWWHswywjZInVoYr4F
"""

from math import sqrt
from math import cos
from math import sin
import math
import pandas as pd
import csv

def rad(d):
    r = d * math.pi / 180.0
    return r

def getDistance(lat1, lng1, lat2, lng2):
    EARTH_REDIUS = 6378.137
    lat1 = float(lat1)
    lng1 = float(lng1)
    lat2 = float(lat2)
    lng2 = float(lng2)
    radLat1 = rad(lat1)
    radLat2 = rad(lat2)
    a = radLat1 - radLat2
    b = rad(lng1) - rad(lng2)
    s = 2 * math.asin(math.sqrt(math.pow(sin(a/2), 2) + cos(radLat1) * cos(radLat2) * math.pow(sin(b/2), 2)))
    s = s * EARTH_REDIUS
    return s


def map_for_user(case,time,local_x, local_y):
    time = int(time.split(":")[0])
    if time % 2 != 0:
        time_map = (time-1)/2
    else:
        time_map = time/2
    df = pd.read_csv("stolen_map.csv")
    bike_map_dict = {}
    motor_map_dict = {}
    car_map_dict = {}   
    bike_map = ['bike0','bike2','bike4','bike6','bike8','bike10','bike12','bike14','bike16','bike18','bike20','bike22']
    motor_map = ['motor0','motor2','motor4','motor6','motor8','motor10','motor12','motor14','motor16','motor18','motor20','motor22']          
    car_map = ['car0','car2','car4','car6','car8','car10','car12','car14','car16','car18','car20','car22']
    
    if case == "car":
      for time_map in range(len(car_map)):
        car_map_website = car_map[time_map]
        car_map_dict[car_map_website] = df[car_map_website]
        print(car_map_dict[map[time_map]])

    elif case == "motor":
      for time_map in range(len(motor_map)):
        motor_map_website = motor_map[time_map]
        motor_map_dict[motor_map_website] = df[motor_map_website]
        print(motor_map_dict[map[time_map]])

    elif case == "bike":
      for time_map in range(len(bike_map)):
        bike_map_website = bike_map[time_map]
        bike_map_dict[bike_map_website] = df[bike_map_website]
        print(bike_map_dict[map[time_map]])    

def case_count(case, time, local_x, local_y):
    time = int(time.split(":")[0])
    if time % 2 != 0:
        time -= 1
        num_sum = []
        range_km = 2
    
        for case in ["car","moto","bike"]:
            num = 0

            #df_case = pd.read_csv(f"{case}_{time}.csv",encoding='big5')
            file = open(f"{case}_{time}.csv", "r",encoding='big5')
            for line in file:
              line = line.strip(" ")
              line = line.strip("\n")
              line = line.split(",")
              case_x = line[4]
              case_y = line[5]
              if getDistance(case_x, case_y, local_x, local_y) <= range_km:
                num +=1
        num_sum.append(num)
        return num_sum
  

def risk(num_sum):        
    num_tot = sum(num_sum)
    range_km = 2

    risk = "略微安全區段"
    if num_tot >= 5:
        risk = "危險區段"
    elif num_tot <= 1:
        risk = "安全區段"
        
    return print(f"您附近{range_km}公里內\n有 {num_sum[0]}件汽車竊盜/ {num_sum[1]}件機車竊盜/ {num_sum[2]}件腳踏車竊盜\n該區域屬於「{risk}」。")